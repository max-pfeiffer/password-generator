name: Pipeline

on: push

jobs:
  code-quality:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt -r requirements-dev.txt
      - name: pylint
        run: |
          source .venv/bin/activate
          pylint app tests image_build
      - name: black
        run: |
          source .venv/bin/activate
          black --check .

  run-tests:
    needs: code-quality
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run all tests with pytest
        run: |
          source .venv/bin/activate
          pytest
          pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  publish-image:
    needs: run-tests
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Get Git Commit Tag Name
        uses: olegtarasov/get-tag@v2.1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Publish Image to Docker Hub
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: |
          source .venv/bin/activate
          python -m image_build.publish
